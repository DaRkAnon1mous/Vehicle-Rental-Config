# Server Configuration
server.port=8080

# Application Configuration
spring.application.name=api-gateway

# Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# User Service Route
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**

# Vehicle Service Route
spring.cloud.gateway.routes[1].id=vehicle-service
spring.cloud.gateway.routes[1].uri=lb://vehicle-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/vehicles/**

# Rental Service Route
spring.cloud.gateway.routes[2].id=rental-service
spring.cloud.gateway.routes[2].uri=lb://rental-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/rentals/**

# Booking Service Route
spring.cloud.gateway.routes[3].id=booking-service
spring.cloud.gateway.routes[3].uri=lb://booking-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/bookings/**

# Payment Service Route
spring.cloud.gateway.routes[4].id=payment-service
spring.cloud.gateway.routes[4].uri=lb://payment-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/payments/**

# Disable Config Server
spring.cloud.config.enabled=false

# Eureka Configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.hostname=localhost
